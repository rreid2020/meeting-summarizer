services:
  # Backend API service
  - type: web
    name: meeting-summarizer
    runtime: python
    buildCommand: |
      # Install system dependencies
      apt-get update && apt-get install -y ffmpeg


      # Install Python dependencies
      pip install --no-cache-dir -r requirements.txt

      # Install Node.js LTS
      curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
      apt-get install -y nodejs

      # Show versions and directory structure
      echo "Node and npm versions:"
      node --version
      npm --version
      echo "Initial directory structure:"
      pwd
      ls -la

      # Build frontend
      echo "Building frontend..."
      cd frontend
      echo "Frontend directory contents:"
      ls -la
      
      # Install dependencies and build
      echo "Installing dependencies..."
      npm install
      echo "Building React app..."
      REACT_APP_API_URL=https://meeting-summarizer.onrender.com npm run build
      echo "Build directory contents:"
      ls -la build/
      
      # Copy to static directory
      cd ..
      echo "Creating static directory in app root..."
      mkdir -p /app/static
      echo "Copying build files..."
      if [ -d "frontend/build" ]; then
        cp -rv frontend/build/* /app/static/
        echo "Static directory after copy:"
        ls -la /app/static/
      else
        echo "ERROR: frontend/build directory not found!"
        exit 1
      fi

    startCommand: |
      echo "Starting server..."
      echo "Current directory: $(pwd)"
      echo "Directory contents:"
      ls -la
      if [ -d "/app/static" ]; then
        echo "Static directory exists:"
        ls -la /app/static/
      else
        echo "ERROR: Static directory not found!"
        mkdir -p /app/static
        echo "Created empty static directory"
      fi
      uvicorn app.main:app --host 0.0.0.0 --port $PORT

    envVars:
      - key: PYTHON_VERSION
        value: "3.11.11"
      - key: OPENAI_API_KEY
        value: test_openai_key
      - key: NODE_ENV
        value: production
      - key: CI
        value: "false"
      - key: GENERATE_SOURCEMAP
        value: "false"
    plan: pro
    scaling:
      minInstances: 1
      maxInstances: 1